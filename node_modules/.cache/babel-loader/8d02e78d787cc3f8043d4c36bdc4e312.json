{"ast":null,"code":"var _jsxFileName = \"/Users/byeonghyeokjo/Desktop/artona/failed/src/features/lists/Lists.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { fetchPeopleListsAsync, selectPeopleLists, selectPeopleStatus, Status, updatePeopleListAsync } from \"./ListsSlice\";\nimport List from './List';\nimport ListForm from './ListForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PeopleLists() {\n  _s();\n\n  const peopleLists = useAppSelector(selectPeopleLists);\n  const status = useAppSelector(selectPeopleStatus);\n  const dispatch = useAppDispatch();\n  const [peopleListToEdit, setPeopleListToEdit] = useState(0);\n  useEffect(() => {\n    dispatch(fetchPeopleListsAsync());\n  }, [dispatch]);\n\n  const editForm = person_id => {\n    if (peopleListToEdit === person_id) {\n      setPeopleListToEdit(0);\n    } else {\n      setPeopleListToEdit(person_id);\n    }\n  };\n\n  const submitEdit = formData => {\n    dispatch(updatePeopleListAsync(formData));\n    editForm();\n  };\n\n  let views;\n\n  if (status !== Status.UpToDate) {\n    views = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else {\n    views = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(ListForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), peopleLists && peopleLists.length > 0 && peopleLists.map(peopleList => {\n          console.log(peopleList.id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"3em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              dispatch: dispatch,\n              peopleList: peopleList,\n              editForm: () => editForm(peopleList.id),\n              peopleListToEdit: peopleListToEdit,\n              submitEdit: submitEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)\n          }, peopleList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: views\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PeopleLists, \"w4ydhbA591XwsiLtHE3wP4m40k0=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch];\n});\n\n_c = PeopleLists;\nexport default PeopleLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleLists\");","map":{"version":3,"names":["React","useEffect","useState","useAppSelector","useAppDispatch","fetchPeopleListsAsync","selectPeopleLists","selectPeopleStatus","Status","updatePeopleListAsync","List","ListForm","PeopleLists","peopleLists","status","dispatch","peopleListToEdit","setPeopleListToEdit","editForm","person_id","submitEdit","formData","views","UpToDate","length","map","peopleList","console","log","id","margin"],"sources":["/Users/byeonghyeokjo/Desktop/artona/failed/src/features/lists/Lists.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\nimport { fetchPeopleListsAsync, selectPeopleLists, selectPeopleStatus, Status, updatePeopleListAsync } from \"./ListsSlice\"\nimport List from './List';\nimport ListForm from './ListForm'\n\nfunction PeopleLists() {\n  const peopleLists = useAppSelector(selectPeopleLists);\n  const status = useAppSelector(selectPeopleStatus);\n  const dispatch = useAppDispatch();\n  const [peopleListToEdit, setPeopleListToEdit] = useState(0);\n\n\n  useEffect(() => {\n    dispatch(fetchPeopleListsAsync());\n  }, [dispatch]);\n\n  const editForm = (person_id?: number) => {\n    if (peopleListToEdit === person_id) {\n      setPeopleListToEdit(0);\n    } else {\n      setPeopleListToEdit(person_id as number);\n    }\n  }\n\n  const submitEdit = (formData: any) => {\n    dispatch(updatePeopleListAsync(formData));\n    editForm();\n  } \n\n  let views;\n\n  if (status !== Status.UpToDate) {\n    views = <div>{status}</div>\n  } else {\n    views = <div className=\"card\">\n      <div className='card-body'>\n          <ListForm />\n          {peopleLists && peopleLists.length > 0 && peopleLists.map(peopleList => {\n            console.log(peopleList.id)\n            return <div key={peopleList.id} style={{margin:\"3em\"}}>\n                    <List \n                      dispatch={dispatch}\n                      peopleList={peopleList}\n                      editForm={() => editForm(peopleList.id)}\n                      peopleListToEdit={peopleListToEdit}\n                      submitEdit={submitEdit}\n                    />\n                  </div>\n          })}\n      </div>\n    </div>\n  }\n\n  return (\n    <div>\n      {views}\n    </div>\n  )\n}\n\nexport default PeopleLists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAASC,qBAAT,EAAgCC,iBAAhC,EAAmDC,kBAAnD,EAAuEC,MAAvE,EAA+EC,qBAA/E,QAA4G,cAA5G;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAMC,WAAW,GAAGV,cAAc,CAACG,iBAAD,CAAlC;EACA,MAAMQ,MAAM,GAAGX,cAAc,CAACI,kBAAD,CAA7B;EACA,MAAMQ,QAAQ,GAAGX,cAAc,EAA/B;EACA,MAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,CAAD,CAAxD;EAGAD,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;EACD,CAFQ,EAEN,CAACU,QAAD,CAFM,CAAT;;EAIA,MAAMG,QAAQ,GAAIC,SAAD,IAAwB;IACvC,IAAIH,gBAAgB,KAAKG,SAAzB,EAAoC;MAClCF,mBAAmB,CAAC,CAAD,CAAnB;IACD,CAFD,MAEO;MACLA,mBAAmB,CAACE,SAAD,CAAnB;IACD;EACF,CAND;;EAQA,MAAMC,UAAU,GAAIC,QAAD,IAAmB;IACpCN,QAAQ,CAACN,qBAAqB,CAACY,QAAD,CAAtB,CAAR;IACAH,QAAQ;EACT,CAHD;;EAKA,IAAII,KAAJ;;EAEA,IAAIR,MAAM,KAAKN,MAAM,CAACe,QAAtB,EAAgC;IAC9BD,KAAK,gBAAG;MAAA,UAAMR;IAAN;MAAA;MAAA;MAAA;IAAA,QAAR;EACD,CAFD,MAEO;IACLQ,KAAK,gBAAG;MAAK,SAAS,EAAC,MAAf;MAAA,uBACN;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKT,WAAW,IAAIA,WAAW,CAACW,MAAZ,GAAqB,CAApC,IAAyCX,WAAW,CAACY,GAAZ,CAAgBC,UAAU,IAAI;UACtEC,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACG,EAAvB;UACA,oBAAO;YAAyB,KAAK,EAAE;cAACC,MAAM,EAAC;YAAR,CAAhC;YAAA,uBACC,QAAC,IAAD;cACE,QAAQ,EAAEf,QADZ;cAEE,UAAU,EAAEW,UAFd;cAGE,QAAQ,EAAE,MAAMR,QAAQ,CAACQ,UAAU,CAACG,EAAZ,CAH1B;cAIE,gBAAgB,EAAEb,gBAJpB;cAKE,UAAU,EAAEI;YALd;cAAA;cAAA;cAAA;YAAA;UADD,GAAUM,UAAU,CAACG,EAArB;YAAA;YAAA;YAAA;UAAA,QAAP;QASD,CAXyC,CAF9C;MAAA;QAAA;QAAA;QAAA;MAAA;IADM;MAAA;MAAA;MAAA;IAAA,QAAR;EAiBD;;EAED,oBACE;IAAA,UACGP;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GArDQV,W;UACaT,c,EACLA,c,EACEC,c;;;KAHVQ,W;AAuDT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}