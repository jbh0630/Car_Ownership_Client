{"ast":null,"code":"var _jsxFileName = \"/Users/byeonghyeokjo/Desktop/artona/failed/src/features/lists/Lists.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { fetchPeopleListsAsync, selectPeopleLists, selectPeopleStatus, Status } from \"./ListsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PeopleLists() {\n  _s();\n\n  const peopleLists = useAppSelector(selectPeopleLists);\n  const status = useAppSelector(selectPeopleStatus);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchPeopleListsAsync());\n  }, [dispatch]);\n  let views;\n\n  if (status !== Status.UpToDate) {\n    views = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else {\n    views = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: peopleLists && peopleLists.length > 0 && peopleLists.map(peopleList => {\n          var _peopleList$attribute, _peopleList$attribute2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"3em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [(_peopleList$attribute = peopleList.attributes) === null || _peopleList$attribute === void 0 ? void 0 : _peopleList$attribute.first_name, \" \", (_peopleList$attribute2 = peopleList.attributes) === null || _peopleList$attribute2 === void 0 ? void 0 : _peopleList$attribute2.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this)\n          }, peopleList.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PeopleLists, \"5ZjXUAX1WXlObcs/qe5+/9bad18=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch];\n});\n\n_c = PeopleLists;\nexport default PeopleLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleLists\");","map":{"version":3,"names":["React","useEffect","useAppSelector","useAppDispatch","fetchPeopleListsAsync","selectPeopleLists","selectPeopleStatus","Status","PeopleLists","peopleLists","status","dispatch","views","UpToDate","length","map","peopleList","margin","attributes","first_name","last_name","id"],"sources":["/Users/byeonghyeokjo/Desktop/artona/failed/src/features/lists/Lists.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\nimport { fetchPeopleListsAsync, selectPeopleLists, selectPeopleStatus, Status } from \"./ListsSlice\"\n\nfunction PeopleLists() {\n  const peopleLists = useAppSelector(selectPeopleLists);\n  const status = useAppSelector(selectPeopleStatus);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPeopleListsAsync());\n  }, [dispatch]);\n\n  let views;\n\n  if (status !== Status.UpToDate) {\n    views = <div>{status}</div>\n  } else {\n    views = <div className=\"card\">\n      <div className='card-body'>\n        {/*FORM */}\n        {peopleLists && peopleLists.length > 0 && peopleLists.map(peopleList => {\n          return <div key={peopleList.id} style={{margin:\"3em\"}}>\n            <h3>{peopleList.attributes?.first_name} {peopleList.attributes?.last_name}</h3>\n            \n          </div>\n        })}\n      </div>\n    </div>\n  }\n\n  return (\n    <div>\n    </div>\n  )\n}\n\nexport default PeopleLists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAASC,qBAAT,EAAgCC,iBAAhC,EAAmDC,kBAAnD,EAAuEC,MAAvE,QAAqF,cAArF;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrB,MAAMC,WAAW,GAAGP,cAAc,CAACG,iBAAD,CAAlC;EACA,MAAMK,MAAM,GAAGR,cAAc,CAACI,kBAAD,CAA7B;EACA,MAAMK,QAAQ,GAAGR,cAAc,EAA/B;EAEAF,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACP,qBAAqB,EAAtB,CAAR;EACD,CAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;EAIA,IAAIC,KAAJ;;EAEA,IAAIF,MAAM,KAAKH,MAAM,CAACM,QAAtB,EAAgC;IAC9BD,KAAK,gBAAG;MAAA,UAAMF;IAAN;MAAA;MAAA;MAAA;IAAA,QAAR;EACD,CAFD,MAEO;IACLE,KAAK,gBAAG;MAAK,SAAS,EAAC,MAAf;MAAA,uBACN;QAAK,SAAS,EAAC,WAAf;QAAA,UAEGH,WAAW,IAAIA,WAAW,CAACK,MAAZ,GAAqB,CAApC,IAAyCL,WAAW,CAACM,GAAZ,CAAgBC,UAAU,IAAI;UAAA;;UACtE,oBAAO;YAAyB,KAAK,EAAE;cAACC,MAAM,EAAC;YAAR,CAAhC;YAAA,uBACL;cAAA,oCAAKD,UAAU,CAACE,UAAhB,0DAAK,sBAAuBC,UAA5B,iCAAyCH,UAAU,CAACE,UAApD,2DAAyC,uBAAuBE,SAAhE;YAAA;cAAA;cAAA;cAAA;YAAA;UADK,GAAUJ,UAAU,CAACK,EAArB;YAAA;YAAA;YAAA;UAAA,QAAP;QAID,CALyC;MAF5C;QAAA;QAAA;QAAA;MAAA;IADM;MAAA;MAAA;MAAA;IAAA,QAAR;EAWD;;EAED,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAID;;GA/BQb,W;UACaN,c,EACLA,c,EACEC,c;;;KAHVK,W;AAiCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}