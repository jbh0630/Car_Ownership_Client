{"ast":null,"code":"const API_URL = \"http://localhost:3000/api/v1/people\";\nexport async function fetchPeopleLists() {\n  return fetch(`${API_URL}`, {\n    method: \"GET\",\n    credentials: 'omit',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).catch(error => {\n    console.log(\"Error: \", error);\n    return {};\n  });\n}\nexport async function createPeopleList(payload) {\n  const list = payload.list;\n  return fetch(`${API_URL}`, {\n    method: \"POST\",\n    credentials: 'omit',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      list\n    })\n  }).then(res => res.json()).catch(error => {\n    console.log(\"Error: \", error);\n    return {};\n  });\n}\nexport async function destroyPeopleList(payload) {\n  const list = payload.list;\n  console.log(JSON.stringify(list.id));\n  return fetch(`${API_URL}/${list.id}.json`, {\n    method: \"DELETE\",\n    credentials: 'omit',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).catch(error => {\n    console.log(\"Error: \", error);\n    return {};\n  });\n}\nexport async function updatePeopleList(payload) {\n  const list = payload.list;\n  return fetch(`${API_URL}/${list.id}`, {\n    method: \"PUT\",\n    credentials: 'omit',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      list\n    })\n  }).then(res => res.json()).catch(error => {\n    console.log(\"Error: \", error);\n    return {};\n  });\n}","map":{"version":3,"names":["API_URL","fetchPeopleLists","fetch","method","credentials","headers","then","res","json","catch","error","console","log","createPeopleList","payload","list","body","JSON","stringify","destroyPeopleList","id","updatePeopleList"],"sources":["/Users/byeonghyeokjo/Desktop/artona/failed/src/features/lists/PeopleAPI.tsx"],"sourcesContent":["import { PeopleListDeleteData, PeopleListFormData, PeopleListsState } from \"./ListsSlice\";\n\nconst API_URL = \"http://localhost:3000/api/v1/people\";\n\nexport async function fetchPeopleLists() {\n    return fetch(`${API_URL}`, {\n        method: \"GET\",\n\t\tcredentials: 'omit',\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => res.json())\n    .catch((error) => {\n        console.log(\"Error: \", error);\n        return {} as PeopleListsState;\n    });\n}\n\nexport async function createPeopleList(payload: PeopleListFormData) {\n    const list = payload.list;\n    return fetch(`${API_URL}`, {\n        method: \"POST\",\n        credentials: 'omit',\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({list})\n    }).then((res) => res.json())\n    .catch((error) => {\n        console.log(\"Error: \", error);\n        return {} as PeopleListsState;\n    });\n}\n\nexport async function destroyPeopleList(payload: PeopleListDeleteData) {\n    const list = payload.list;\n    console.log(JSON.stringify(list.id));\n    return fetch(`${API_URL}/${list.id}.json`, {\n        method: \"DELETE\",\n        credentials: 'omit',\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((res) => res.json())\n    .catch((error) => {\n        console.log(\"Error: \", error);\n        return {} as PeopleListsState;\n    });\n}\n\nexport async function updatePeopleList(payload: PeopleListFormData) {\n    const list = payload.list;\n    return fetch(`${API_URL}/${list.id}`, {\n        method: \"PUT\",\n        credentials: 'omit',\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({list})\n    }).then((res) => res.json())\n    .catch((error) => {\n        console.log(\"Error: \", error);\n        return {} as PeopleListsState;\n    });\n}"],"mappings":"AAEA,MAAMA,OAAO,GAAG,qCAAhB;AAEA,OAAO,eAAeC,gBAAf,GAAkC;EACrC,OAAOC,KAAK,CAAE,GAAEF,OAAQ,EAAZ,EAAe;IACvBG,MAAM,EAAE,KADe;IAE7BC,WAAW,EAAE,MAFgB;IAGvBC,OAAO,EAAE;MACL,gBAAgB;IADX;EAHc,CAAf,CAAL,CAMJC,IANI,CAMEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANV,EAONC,KAPM,CAOCC,KAAD,IAAW;IACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;IACA,OAAO,EAAP;EACH,CAVM,CAAP;AAWH;AAED,OAAO,eAAeG,gBAAf,CAAgCC,OAAhC,EAA6D;EAChE,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;EACA,OAAOb,KAAK,CAAE,GAAEF,OAAQ,EAAZ,EAAe;IACvBG,MAAM,EAAE,MADe;IAEvBC,WAAW,EAAE,MAFU;IAGvBC,OAAO,EAAE;MACL,gBAAgB;IADX,CAHc;IAMvBW,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACH;IAAD,CAAf;EANiB,CAAf,CAAL,CAOJT,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQNC,KARM,CAQCC,KAAD,IAAW;IACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;IACA,OAAO,EAAP;EACH,CAXM,CAAP;AAYH;AAED,OAAO,eAAeS,iBAAf,CAAiCL,OAAjC,EAAgE;EACnE,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;EACAJ,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,SAAL,CAAeH,IAAI,CAACK,EAApB,CAAZ;EACA,OAAOlB,KAAK,CAAE,GAAEF,OAAQ,IAAGe,IAAI,CAACK,EAAG,OAAvB,EAA+B;IACvCjB,MAAM,EAAE,QAD+B;IAEvCC,WAAW,EAAE,MAF0B;IAGvCC,OAAO,EAAE;MACL,gBAAgB;IADX;EAH8B,CAA/B,CAAL,CAMJC,IANI,CAMEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANV,EAONC,KAPM,CAOCC,KAAD,IAAW;IACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;IACA,OAAO,EAAP;EACH,CAVM,CAAP;AAWH;AAED,OAAO,eAAeW,gBAAf,CAAgCP,OAAhC,EAA6D;EAChE,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;EACA,OAAOb,KAAK,CAAE,GAAEF,OAAQ,IAAGe,IAAI,CAACK,EAAG,EAAvB,EAA0B;IAClCjB,MAAM,EAAE,KAD0B;IAElCC,WAAW,EAAE,MAFqB;IAGlCC,OAAO,EAAE;MACL,gBAAgB;IADX,CAHyB;IAMlCW,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAACH;IAAD,CAAf;EAN4B,CAA1B,CAAL,CAOJT,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQNC,KARM,CAQCC,KAAD,IAAW;IACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;IACA,OAAO,EAAP;EACH,CAXM,CAAP;AAYH"},"metadata":{},"sourceType":"module"}